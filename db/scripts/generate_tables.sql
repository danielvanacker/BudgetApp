CREATE TABLE active_user(id VARCHAR(30) PRIMARY KEY);
CREATE TABLE category(id INTEGER GENERATED BY DEFAULT AS IDENTITY, name VARCHAR(55), is_income boolean NOT NULL, user_id VARCHAR(30), FOREIGN KEY(user_id) REFERENCES active_user(id), PRIMARY KEY(id), UNIQUE(name, user_id));
CREATE TABLE expense(id INTEGER GENERATED BY DEFAULT AS IDENTITY, date DATE NOT NULL, amount FLOAT NOT NULL, comment VARCHAR(255), category_id INTEGER NOT NULL, user_id VARCHAR(30) NOT NULL, FOREIGN KEY(category_id) REFERENCES category(id), FOREIGN KEY(user_id) REFERENCES active_user(id), PRIMARY KEY(id));
CREATE TABLE budget(month SMALLINT, year SMALLINT, amount FLOAT NOT NULL, comment VARCHAR(255), category_id INTEGER NOT NULL, user_id VARCHAR(30) NOT NULL, PRIMARY KEY(month, year, category_id, user_id), FOREIGN KEY(category_id) REFERENCES category(id), FOREIGN KEY(user_id) REFERENCES active_user(id));
CREATE TABLE income(id INTEGER GENERATED BY DEFAULT AS IDENTITY, date DATE NOT NULL, amount FLOAT NOT NULL, comment VARCHAR(255), category_id INTEGER NOT NULL, user_id VARCHAR(30) NOT NULL, FOREIGN KEY(category_id) REFERENCES category(id), FOREIGN KEY(user_id) REFERENCES active_user(id), PRIMARY KEY (id));
CREATE TABLE people(id INTEGER GENERATED BY DEFAULT AS IDENTITY, name VARCHAR(55), user_id VARCHAR(30) NOT NULL, FOREIGN KEY(user_id) REFERENCES active_user(id), UNIQUE(name, user_id), PRIMARY KEY(id));
CREATE TABLE money_owed(id INTEGER GENERATED BY DEFAULT AS IDENTITY, date DATE NOT NULL, amount FLOAT NOT NULL, comment VARCHAR(255), person_id INTEGER NOT NULL, expense_id INTEGER, user_id VARCHAR(30) NOT NULL, FOREIGN KEY(person_id) REFERENCES people(id), FOREIGN KEY(expense_id) REFERENCES expense(id), FOREIGN KEY(user_id) REFERENCES active_user(id), PRIMARY KEY(id));